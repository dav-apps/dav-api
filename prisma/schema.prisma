generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model api_endpoints {
  id          BigInt   @id @default(autoincrement())
  api_slot_id BigInt?
  path        String?  @db.VarChar
  method      String?  @db.VarChar
  commands    String?
  caching     Boolean? @default(false)
  created_at  DateTime @db.Timestamp(6)
  updated_at  DateTime @db.Timestamp(6)
}

model api_env_vars {
  id          BigInt  @id @default(autoincrement())
  api_slot_id BigInt?
  name        String? @db.VarChar
  value       String? @db.VarChar
  class_name  String? @db.VarChar
}

model api_errors {
  id          BigInt  @id @default(autoincrement())
  api_slot_id BigInt?
  code        Int?
  message     String? @db.VarChar
}

model api_functions {
  id          BigInt   @id @default(autoincrement())
  api_slot_id BigInt?
  name        String?  @db.VarChar
  params      String?  @db.VarChar
  commands    String?
  created_at  DateTime @db.Timestamp(6)
  updated_at  DateTime @db.Timestamp(6)
}

model api_slots {
  id            BigInt   @id @default(autoincrement())
  api_id        BigInt?
  name          String?  @db.VarChar
  created_at    DateTime @db.Timestamp(6)
  updated_at    DateTime @db.Timestamp(6)
  documentation String?
}

model apis {
  id         BigInt   @id @default(autoincrement())
  app_id     BigInt?
  name       String?  @db.VarChar
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
}

model app_user_snapshots {
  id                BigInt    @id @default(autoincrement())
  app_id            BigInt?
  time              DateTime? @db.Timestamp(6)
  daily_active      Int?      @default(0)
  monthly_active    Int?      @default(0)
  yearly_active     Int?      @default(0)
  weekly_active     Int?      @default(0)
  free_plan         Int?      @default(0)
  plus_plan         Int?      @default(0)
  pro_plan          Int?      @default(0)
  email_confirmed   Int?      @default(0)
  email_unconfirmed Int?      @default(0)
}

model app_users {
  id           BigInt    @id @default(autoincrement())
  user_id      BigInt?
  app_id       BigInt?
  used_storage BigInt?   @default(0)
  last_active  DateTime? @db.Timestamp(6)
  created_at   DateTime  @db.Timestamp(6)
  updated_at   DateTime  @db.Timestamp(6)
}

model apps {
  id                   BigInt   @id @default(autoincrement())
  dev_id               BigInt?
  name                 String?  @db.VarChar
  description          String?  @db.VarChar
  published            Boolean? @default(false)
  web_link             String?  @db.VarChar
  google_play_link     String?  @db.VarChar
  microsoft_store_link String?  @db.VarChar
  created_at           DateTime @db.Timestamp(6)
  updated_at           DateTime @db.Timestamp(6)
}

model ar_internal_metadata {
  key        String   @id @db.VarChar
  value      String?  @db.VarChar
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
}

model collections {
  id         BigInt   @id @default(autoincrement())
  table_id   BigInt?
  name       String?  @db.VarChar
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
}

model compiled_api_endpoints {
  id              BigInt   @id @default(autoincrement())
  api_endpoint_id BigInt?
  code            String?
  created_at      DateTime @db.Timestamp(6)
  updated_at      DateTime @db.Timestamp(6)
}

model devs {
  id         BigInt   @id @default(autoincrement())
  user_id    BigInt?
  api_key    String?  @db.VarChar
  secret_key String?  @db.VarChar
  uuid       String?  @db.VarChar
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
  users      users?   @relation(fields: [user_id], references: [id])
}

model notifications {
  id         BigInt    @id @default(autoincrement())
  user_id    BigInt?
  app_id     BigInt?
  uuid       String?   @unique(map: "index_notifications_on_uuid") @db.VarChar
  time       DateTime? @db.Timestamp(6)
  interval   Int?
  title      String?   @db.VarChar
  body       String?   @db.VarChar
  created_at DateTime  @db.Timestamp(6)
  updated_at DateTime  @db.Timestamp(6)
}

model providers {
  id                BigInt   @id @default(autoincrement())
  user_id           BigInt?
  stripe_account_id String?  @db.VarChar
  created_at        DateTime @db.Timestamp(6)
  updated_at        DateTime @db.Timestamp(6)
}

model purchases {
  id                BigInt   @id @default(autoincrement())
  user_id           BigInt?
  payment_intent_id String?  @db.VarChar
  provider_name     String?  @db.VarChar
  provider_image    String?  @db.VarChar
  product_name      String?  @db.VarChar
  product_image     String?  @db.VarChar
  price             Int?
  currency          String?  @db.VarChar
  completed         Boolean? @default(false)
  created_at        DateTime @db.Timestamp(6)
  updated_at        DateTime @db.Timestamp(6)
  uuid              String?  @unique(map: "index_purchases_on_uuid") @db.VarChar
}

model redis_table_object_operations {
  id                BigInt   @id @default(autoincrement())
  table_object_uuid String?  @db.VarChar
  operation         String?  @db.VarChar
  created_at        DateTime @db.Timestamp(6)
  updated_at        DateTime @db.Timestamp(6)
}

model schema_migrations {
  version String @id @db.VarChar
}

model sessions {
  id          BigInt   @id @default(autoincrement())
  user_id     BigInt?
  app_id      BigInt?
  token       String?  @unique(map: "index_sessions_on_token") @db.VarChar
  old_token   String?  @unique(map: "index_sessions_on_old_token") @db.VarChar
  device_name String?  @db.VarChar
  device_os   String?  @db.VarChar
  created_at  DateTime @db.Timestamp(6)
  updated_at  DateTime @db.Timestamp(6)
}

model table_etags {
  id         BigInt   @id @default(autoincrement())
  user_id    BigInt?
  table_id   BigInt?
  etag       String?  @db.VarChar
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
}

model table_object_collections {
  id              BigInt   @id @default(autoincrement())
  table_object_id BigInt?
  collection_id   BigInt?
  created_at      DateTime @db.Timestamp(6)
}

model table_object_prices {
  id              BigInt  @id @default(autoincrement())
  table_object_id BigInt?
  price           Int?    @default(0)
  currency        String? @default("eur") @db.VarChar
}

model table_object_properties {
  id              BigInt  @id @default(autoincrement())
  table_object_id BigInt?
  name            String? @db.VarChar
  value           String?
}

model table_object_purchases {
  id              BigInt   @id @default(autoincrement())
  table_object_id BigInt?
  purchase_id     BigInt?
  created_at      DateTime @db.Timestamp(6)
}

model table_object_user_accesses {
  id              BigInt   @id @default(autoincrement())
  user_id         BigInt?
  table_object_id BigInt?
  table_alias     BigInt?
  created_at      DateTime @db.Timestamp(6)
}

model table_objects {
  id         BigInt   @id @default(autoincrement())
  user_id    BigInt?
  table_id   BigInt?
  uuid       String?  @unique(map: "index_table_objects_on_uuid") @db.VarChar
  file       Boolean? @default(false)
  etag       String?  @db.VarChar
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
}

model table_property_types {
  id        BigInt  @id @default(autoincrement())
  table_id  BigInt?
  name      String? @db.VarChar
  data_type Int?    @default(0)
}

model tables {
  id         BigInt   @id @default(autoincrement())
  app_id     BigInt?
  name       String?  @db.VarChar
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
  cdn        Boolean? @default(false)
}

model user_profile_images {
  id         BigInt   @id @default(autoincrement())
  user_id    BigInt?
  ext        String?  @db.VarChar
  mime_type  String?  @db.VarChar
  etag       String?  @db.VarChar
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
}

model user_snapshots {
  id                BigInt    @id @default(autoincrement())
  time              DateTime? @db.Timestamp(6)
  daily_active      Int?      @default(0)
  monthly_active    Int?      @default(0)
  yearly_active     Int?      @default(0)
  weekly_active     Int?      @default(0)
  free_plan         Int?      @default(0)
  plus_plan         Int?      @default(0)
  pro_plan          Int?      @default(0)
  email_confirmed   Int?      @default(0)
  email_unconfirmed Int?      @default(0)
}

model users {
  id                          BigInt    @id @default(autoincrement())
  email                       String?   @db.VarChar
  first_name                  String?   @db.VarChar
  password_digest             String?   @db.VarChar
  confirmed                   Boolean?  @default(false)
  email_confirmation_token    String?   @db.VarChar
  password_confirmation_token String?   @db.VarChar
  old_email                   String?   @db.VarChar
  new_email                   String?   @db.VarChar
  new_password                String?   @db.VarChar
  used_storage                BigInt?   @default(0)
  last_active                 DateTime? @db.Timestamp(6)
  stripe_customer_id          String?   @db.VarChar
  plan                        Int?      @default(0)
  subscription_status         Int?      @default(0)
  period_end                  DateTime? @db.Timestamp(6)
  created_at                  DateTime  @db.Timestamp(6)
  updated_at                  DateTime  @db.Timestamp(6)
  devs                        devs[]
}

model web_push_subscriptions {
  id         BigInt   @id @default(autoincrement())
  session_id BigInt?
  uuid       String?  @unique(map: "index_web_push_subscriptions_on_uuid") @db.VarChar
  endpoint   String?
  p256dh     String?  @db.VarChar
  auth       String?  @db.VarChar
  created_at DateTime @db.Timestamp(6)
}

model websocket_connections {
  id         BigInt   @id @default(autoincrement())
  user_id    BigInt?
  app_id     BigInt?
  token      String   @db.VarChar
  created_at DateTime @db.Timestamp(6)
}
